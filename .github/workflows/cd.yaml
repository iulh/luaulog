name: CD

on:
  push:
    tags: ["v*"]
    branches: ["main"]
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

concurrency:
  # Ensure this workflow does not run twice at the same time
  group: ${{ github.workflow }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4

      - name: Install Pesde
        uses: lumin-org/setup-pesde@v0.4.1
        with:
          token: ${{ secrets.PESDE_AUTH_TOKEN }}

      - name: Install Pesde Dependencies
        run: pesde install --locked

      - name: Build
        run: rojo build --output build.rbxm default.project.json

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build.rbxm

  release:
    name: Release
    needs: [build]
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: write
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4

      - name: Download luaulog Build
        uses: actions/download-artifact@v4
        with:
          name: build
          path: build

      - name: Rename Build
        run: mv build/build.rbxm luaulog.rbxm

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          files: |
            luaulog.rbxm

  publish-wally:
    name: Publish-Wally
    needs: [release]
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4

      - name: Install Rokit
        uses: raild3x/setup-rokit@v0.1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Wally Login
        run: wally login --token ${{ secrets.WALLY_AUTH_TOKEN }}

      - name: Publish
        run: wally publish

  publish-pesde:
    name: Publish-Pesde
    needs: [release]
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4

      - name: Install Pesde
        uses: lumin-org/setup-pesde@v0.4.1
        with:
          token: ${{ secrets.PESDE_AUTH_TOKEN }}

      - name: Install Pesde Dependencies
        run: pesde install --locked

      - name: Pesde Login
        run: pesde auth login --token ${{ secrets.PESDE_AUTH_TOKEN }}

      - name: Publish
        run: pesde publish -y
